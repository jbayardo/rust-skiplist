language: rust
sudo: false
rust:
  - nightly
env:
  matrix:
    - RUSTFLAGS="-Z sanitizer=address"
    - RUSTFLAGS="-Z sanitizer=memory"
    - RUSTFLAGS="-Z sanitizer=leak"
    - RUSTFLAGS="-Z sanitizer=thread"
  global:
    - RUST_BACKTRACE=1
    - CODECOV_TOKEN=:uuid-repo-token
# TODO: fix for more envs from https://github.com/japaric/trust/blob/master/.travis.yml
# Problem is how to selectively enable sanitizers for architectures. See https://github.com/rust-lang/rust/issues/39699 for support
matrix:
  include:
    # Linux
    - env: TARGET=x86_64-unknown-linux-gnu

    # OSX
    - env: TARGET=x86_64-apple-darwin
      os: osx


# All of this is required to run code coverage for out project using CodeCov.
# See https://github.com/codecov/example-rust
addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev

after_success: |
  wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
  tar xzf master.tar.gz &&
  cd kcov-master &&
  mkdir build &&
  cd build &&
  cmake .. &&
  make &&
  make install DESTDIR=../../kcov-build &&
  cd ../.. &&
  rm -rf kcov-master &&
  for file in target/debug/skiplist-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
  bash <(curl -s https://codecov.io/bash) &&
  echo "Uploaded code coverage"